#!/bin/bash
##########################################################
# phishpoison.sh
#
# Copyright (c)2012 Andy Engdahl
#
# This script was written to poison the database of an
# email phisher.
#
# It pulls data from a .csv file generated by
# http://fakenamegenerator.com and feeds the fake data
# into the phishers database to poison the data hopefully
# ruining the entire database
#
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##########################################################

bank_lines=`cat ccissuer.txt | wc -l`
user_agent_lines=`cat useragents.txt | wc -l`
phish_script="http://webemail.phpforms.net/view_forms/sub_view/firstform"

echo $bank_lines
while read line
do
  line=`echo $line | sed 's///g'` 					# strip windows newlines "^M"
  fname=`echo $line | cut -d "," -f1`					# load data from .csv
  lname=`echo $line | cut -d "," -f3`
  add=`echo $line | cut -d "," -f5`

  add=`echo $add | sed 's/ /+/g'`					# make URL compliant.  Sub "+" for " "

  city=`echo $line | cut -d "," -f6`
  state=`echo $line | cut -d "," -f7`
  zip=`echo $line | cut -d "," -f8`
  ssn=`echo $line | cut -d "," -f17`

  ssn=`echo $ssn | sed 's/-//g'`					# strip "-" from SSN

  mmn=`echo $line | cut -d "," -f11`
  bday=`echo $line | cut -d "," -f12` # not fed to phish script
  a=`echo $bday | cut -d "/" -f1`					# a=month b=day c=year
  b=`echo $bday | cut -d "/" -f2`
  c=`echo $bday | cut -d "/" -f3`
  cc=`echo $line | cut -d "," -f14`
  exp=`echo $line | cut -d "," -f16` # not fed to phish script
  expm=`echo $exp | cut -d "/" -f1`
  expy=`echo $exp | sed 's/^.*\(..\)$/\1/'`				# use last two digits for the year
  cvv=`echo $line | cut -d "," -f15`

  email=`echo $line | cut -d "," -f9`					# email

  length=$[ ( $RANDOM % 10 ) + 5 ]
  password=`cat /dev/urandom|tr -dc "a-zA-Z0-9-_\$\?"|fold -w $length|head -1` # generate a random password between 5 and 10 chars

  bank_rdm_line=$RANDOM							# pick a random issuing bank
  let "bank_rdm_line %= $bank_lines"
  bank=`sed -n "${bank_rdm_line},${bank_rdm_line} p" ccissuer.txt`
  bank=`echo $bank | sed 's/ /+/g'`

  user_agent_line=$RANDOM
  let "user_agent_line %= $user_agent_lines"
  user_agent=`sed -n "${user_agent_line},${user_agent_line} p" useragents.txt` # pick a random user-agent string

  MOD=9999								# pick a random 4 digit PIN
  FLOOR=1000
  pin=0
  while [ "$pin" -le $FLOOR ]
  do
    pin=$RANDOM
    let "pin %= $MOD"
  done

  if [[ $fname == "GivenName" ]] ; then					# skip the first line
    continue
  fi

									# create form post data string for cURL
  postdata="1=$email&4=$password&5=$password"

  echo curl -d "$postdata" -A "$user_agent" $phish_script			# send http post data to phish script.
									# this is where the evil happens!

  echo "\n $postdata"

  randsleep=$RANDOM							# wait a random amount of time between 0 and
  sleepmod=120								# sleepmod seconds for next iteration
  let "randsleep %= $sleepmod"
  #sleep $randsleep

done < 6f3fb207.csv
