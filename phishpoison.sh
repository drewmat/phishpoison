#!/bin/bash
##########################################################
# phishpoison.sh
#
# Copyright (c)2012 Andy Engdahl
#
# This script was written to poison the database of an
# email phisher.
#
# It pulls data from a .csv file generated by
# http://fakenamegenerator.com and feeds the fake data
# into the phishers database to poison the data hopefully
# ruining the entire database
#
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##########################################################

custom_domain="domain.com"
phish_script="http://localhost/"					# URL of the form processor
referer="http://localhost/"						# URL of the referring page
postprompt='1=$custom_email&4=$password&5=$password&username=$username&submit=submit' 		# create form post data string for cURL

function prompt {
  echo
  echo "Please enter the url of the form"
  read referer
  echo
  echo "Please enter the url of the processing form"
  read phish_script
  echo 
  echo "Please enter your custom mail domain (optional)"
  read custom_domain
  echo
  echo "Please enter the post data string.  ? for all available fields"
  echo "The format should look like this:"
  echo "(if the inputs are named email and password)"
  echo "email=\$email&password=\$password"
  read postprompt

  while [[ $postprompt == "?" ]]
  do
    echo '$fname		- First name'
    echo '$lname		- Last name'
    echo '$email		- email address'
    echo '$username	- fake username (firstname.lastname)'
    echo '$custom_email	- custom email address (firstname.lastname@customdomain)'
    echo '$password	- randomly generated password'
    echo '$add		- street address'
    echo '$city		- city'
    echo '$state		- state'
    echo '$zip		- zip code'
    echo '$month		- birth month'
    echo '$day		- birth day'
    echo '$year		- birth year'
    echo '$ssn		- Social Security Number'
    echo '$cc		- Credit Card Number'
    echo '$expm		- Credit Card Expiration month'
    echo '$expy		- Credit Card Expiration year'
    echo '$cvv		- Credit Card CVV Code'
    echo '$bank		- Credit Card Issuing Bank'
    read postprompt
  done

  echo
  echo
  echo "Post data string is:"
  echo $postprompt
  echo "Press enter to begin poisoning..."
  read
}

if [[ $1 == "-i" ]]
  then
    prompt
fi

bank_lines=`cat ccissuer.txt | wc -l`
user_agent_lines=`cat useragents.txt | wc -l`

while read line
do
  line=`echo $line | sed 's///g'` 					# strip windows newlines "^M"
  fname=`echo $line | cut -d "," -f1`					# load data from .csv
  lname=`echo $line | cut -d "," -f3`
  add=`echo $line | cut -d "," -f5`

  add=`echo $add | sed 's/ /+/g'`					# make URL compliant.  Sub "+" for " "

  city=`echo $line | cut -d "," -f6`
  state=`echo $line | cut -d "," -f7`
  zip=`echo $line | cut -d "," -f8`
  ssn=`echo $line | cut -d "," -f17`

  ssn=`echo $ssn | sed 's/-//g'`					# strip "-" from SSN

  mmn=`echo $line | cut -d "," -f11`
  bday=`echo $line | cut -d "," -f12`					# birthday in mm/dd/yy format
  month=`echo $bday | cut -d "/" -f1`					# a=month b=day c=year
  day=`echo $bday | cut -d "/" -f2`
  year=`echo $bday | cut -d "/" -f3`
  cc=`echo $line | cut -d "," -f14`
  exp=`echo $line | cut -d "," -f16`					# expiration in mm/yyyy format
  expm=`echo $exp | cut -d "/" -f1`
  expy=`echo $exp | sed 's/^.*\(..\)$/\1/'`				# use last two digits for the year
  cvv=`echo $line | cut -d "," -f15`

  email=`echo $line | cut -d "," -f9`					# email
  username=`echo ${fname,,}.${lname,,}`
  custom_email=`echo $username@$custom_domain`

  length=$[ ( $RANDOM % 10 ) + 5 ]
  password=`cat /dev/urandom|tr -dc "a-zA-Z0-9-_\$\?"|fold -w $length|head -1` # generate a random password between 5 and 10 chars

  bank_rdm_line=$RANDOM							# pick a random issuing bank
  let "bank_rdm_line %= $bank_lines"
  bank=`sed -n "${bank_rdm_line},${bank_rdm_line} p" ccissuer.txt`
  bank=`echo $bank | sed 's/ /+/g'`

  user_agent_line=$RANDOM						# pick a random user-agent string
  let "user_agent_line %= $user_agent_lines"
  user_agent=`sed -n "${user_agent_line},${user_agent_line} p" useragents.txt`

  MOD=9999								# pick a random 4 digit PIN
  FLOOR=1000
  pin=0
  while [ "$pin" -le $FLOOR ]
  do
    pin=$RANDOM
    let "pin %= $MOD"
  done

  if [[ $fname == "GivenName" ]] ; then					# skip the first line
    continue
  fi

  postdata=$postprompt							# clear data from previous post
  postdata=`echo $postdata | sed "s/"'$fname'"/$fname/g"`		# prepare the next post
  postdata=`echo $postdata | sed "s/"'$lname'"/$lname/g"`
  postdata=`echo $postdata | sed "s/"'$add'"/$add/g"`
  postdata=`echo $postdata | sed "s/"'$city'"/$city/g"`
  postdata=`echo $postdata | sed "s/"'$state'"/$state/g"`
  postdata=`echo $postdata | sed "s/"'$zip'"/$zip/g"`
  postdata=`echo $postdata | sed "s/"'$month'"/$month/g"`
  postdata=`echo $postdata | sed "s/"'$day'"/$day/g"`
  postdata=`echo $postdata | sed "s/"'$year'"/$year/g"`
  postdata=`echo $postdata | sed "s/"'$ssn'"/$ssn/g"`
  postdata=`echo $postdata | sed "s/"'$cc'"/$cc/g"`
  postdata=`echo $postdata | sed "s/"'$expm'"/$expm/g"`
  postdata=`echo $postdata | sed "s/"'$expy'"/$expy/g"`
  postdata=`echo $postdata | sed "s/"'$cvv'"/$cvv/g"`
  postdata=`echo $postdata | sed "s/"'$email'"/$email/g"`
  postdata=`echo $postdata | sed "s/"'$custom_email'"/$custom_email/g"`
  postdata=`echo $postdata | sed "s/"'$username'"/$username/g"`
  postdata=`echo $postdata | sed "s/"'$password'"/$password/g"`
  postdata=`echo $postdata | sed "s/"'$bank'"/$bank/g"`

  echo "Sending..."
  echo $postdata
  echo

  curl -d "$postdata" -A "$user_agent" -e "$referer" $phish_script > /dev/null	# send http post data to phish script.
									# this is where the poisoning happens!

  randsleep=$RANDOM							# wait a random amount of time between 0 and
  sleepmod=120								# sleepmod seconds for next iteration
  let "randsleep %= $sleepmod"
  sleep $randsleep

done < 6f3fb207.csv

